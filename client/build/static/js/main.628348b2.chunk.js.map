{"version":3,"sources":["components/Banner/index.js","components/CatGalleryCard/index.js","components/SideNav/index.js","utils/API.js","pages/Home.js","components/CatForm/index.js","pages/AddCat.js","utils/AdoptionSDK.js","components/List/index.js","components/Orgs/index.js","pages/Adopt.js","components/Wrapper/index.js","components/RumbleGalleryCard/index.js","pages/Rumble.js","App.js","serviceWorker.js","index.js"],"names":["Banner","className","type","id","href","CatGalleryCard","props","catName","onClick","deleteCat","nickname","alt","src","imgURL","description","SideNav","getOrgs","q","axios","get","params","getCats","getCat","delete","saveCat","catData","post","Home","state","cats","loadCats","API","then","res","setState","data","catch","err","console","log","this","sm","map","dummyCat","key","_id","Component","CatForm","handleInputChange","event","target","name","value","handleFormSubmit","preventDefault","includes","clearForm","htmlFor","onChange","rows","AddCat","petfinder","require","adoptsdk","search","location","callback","client","organization","resp","error","Client","apiKey","secret","List","children","ListItem","Org","city","website","mission_statement","url","role","aria-pressed","rel","Adopt","orgs","message","loadOrgs","length","setDefaultState","response","organizations","style","height","clear","paddingTop","textAlign","placeholder","size","required","org","address","Wrapper","RumbleGalleryCard","alias","clicked","isClicked","image","Rumble","dummyCats","score","userMsg","handleSelection","class","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.628348b2.chunk.js","sourcesContent":["import React from 'react';\nimport './style.css';\n\n\nfunction Banner() {\n    return (\n        <div className='navbar navbar-expand-lg navbar-dark bg-light'>\n            {/* Placeholder button in case google auth is in place of this */}\n            <button type='button' className='btn btn-primary'>Sign-In</button>\n            <h1 className='title' id='banner-title'><a href='/'>Can't Stop this Feline</a></h1>\n\n        </div >\n    )\n}\n\nexport default Banner;","import React from 'react';\nimport './style.css';\n\nfunction CatGalleryCard(props) {\n    return (\n        <div className='card whole-card'>\n            <div> \n                <h5 className='card-title'>\n                    {props.catName}\n                </h5>\n                <button onClick={() => props.deleteCat(props.id)} type=\"button\" className=\"btn btn-outline-danger delete\" id={props.id}>X</button>\n            </div>\n            <h6 className='card-subtitle'>\n                {props.nickname}\n            </h6>\n            <div className='img-container'>\n                <img\n                    className='cat-pic'\n                    alt={props.catName}\n                    src={props.imgURL}\n                />\n            </div>\n            <p className='card-text'>\n                {props.description}\n            </p>\n        </div>\n    )\n}\n\nexport default CatGalleryCard;","import React from 'react';\nimport './style.css';\n\nfunction SideNav() {\n    return (\n        <div>\n            <ul className='side-list' id='side-nav'>\n                <li><a href='/addcat' className='list-item'>Add a Cat</a></li>\n                <li><a href='/rumble' className='list-item'>Rumble</a></li>\n                <li><a href='/adopt' className='list-item'>Adopt</a></li>\n            </ul>\n        </div>\n    );\n}\n\nexport default SideNav;","import axios from \"axios\";\n\nexport default {\n  //Get local organizations via petfinder api and user input location\n  getOrgs: function(q) {\n    return axios.get(\"/api/search\", { params: { q: \"location:\" + q } });\n  },\n  // Gets all cats\n  getCats: function() {\n    return axios.get(\"/api/cats\");\n  },\n  // Gets the cat with the given id\n  getCat: function(id) {\n    return axios.get(\"/api/cats/\" + id);\n  },\n  // Deletes the cat with the given id\n  deleteCat: function(id) {\n    return axios.delete(\"/api/cats/\" + id);\n  },\n  // Saves a cat to the database\n  saveCat: function(catData) {\n    return axios.post(\"/api/cats\", catData);\n  }\n};\n","import React, { Component } from 'react';\nimport Banner from '../components/Banner';\nimport CatGalleryCard from '../components/CatGalleryCard';\n\n//! The next line is for dummy data only\n//import dummyCats from '../dummyCats.json';\n\nimport { Container, Row, Col } from 'react-grid-system';\n\nimport SideNav from '../components/SideNav';\nimport API from \"../utils/API\";\n\n// TODO add function that loads cats from database into leaderboard\n// also will sort cats based upon cuteness score\n\n// TODO function that allows user to click on a cat and show some love\n// user will need to be signed in to access this feature\n// figure logic to prevent multiple clicks from one user\n\n// TODO add delete button to delete your own cat(s)\n\n\nclass Home extends Component {\n    state = {\n        cats: []\n    }\n\n    componentDidMount() {\n        this.loadCats();\n    }\n\n    loadCats = () => {\n        API.getCats()\n            .then(res => {\n                this.setState({ cats: res.data });\n            })\n            .catch(err => console.log(err));\n    }\n\n    deleteCat = id => {\n        API.deleteCat(id)\n            .then(res => this.loadCats())\n            .catch(err => console.log(err));\n    };\n\n    render() {\n        return (\n            <Container>\n                <Banner />\n                <Row>\n                    <Col sm={3}>\n                        <SideNav />\n                    </Col>\n                    <Col sm={9}>\n                        <h2 id='leaderboard'>Cat Leaderboard</h2>\n                        {this.state.cats.map(dummyCat => (\n                            <CatGalleryCard\n                                key={dummyCat.id}\n                                id={dummyCat._id}\n                                deleteCat={this.deleteCat}\n                                catName={dummyCat.catName}\n                                nickname={dummyCat.nickname}\n                                imgURL={dummyCat.imgURL}\n                                description={dummyCat.description}\n                            />\n                        ))}\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default Home;","import React, { Component } from \"react\";\nimport './style.css';\n\nimport API from \"../../utils/API\";\n\nclass CatForm extends Component {\n\nstate = {\n    catName: \"\",\n    nickname: \"\",\n    description: \"\",\n    imgURL: \"\"\n};\n\ncomponentDidMount() {\n    console.log(\"It's mounted\");\n}\n\nhandleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n        [name]: value\n    });\n};\n\nhandleFormSubmit = event => {\n    event.preventDefault();\n    if (this.state.catName && this.state.description && this.state.imgURL.includes(\".\")) {\n        let catData = {\n            catName: this.state.catName,\n            nickname: this.state.nickname,\n            description: this.state.description,\n            imgURL: this.state.imgURL\n        };\n        console.log(catData);\n        API.saveCat({ \n            catName: this.state.catName,\n            nickname: this.state.nickname,\n            description: this.state.description,\n            imgURL: this.state.imgURL\n         })\n            .then(res => console.log(res + \"Success.\"))\n            .catch(err => console.log(err));\n    }\n    this.clearForm();\n}\n\nclearForm = () => {\n    this.setState({\n        catName: \"\",\n        nickname: \"\",\n        description: \"\",\n        imgURL: \"\"\n    });\n}\n\nrender() {\n    return (\n        <div className='card'>\n            <div className='card-body'>\n                <h3 className='card-title'>Add a Cat</h3>\n                <form>\n                    <label htmlFor='cat-name'>Cat Name: </label>\n                    <input type='text' id='cat-name' className='form-control' \n                        value={this.state.catName}\n                        onChange={this.handleInputChange}\n                        name=\"catName\"\n                    />\n                    <label htmlFor='nick-name'>Nickname/Alias: </label>\n                    <input type='text' id='nick-name' className='form-control' \n                        value={this.state.nickname}\n                        onChange={this.handleInputChange}\n                        name=\"nickname\"\n                    />\n                    <label htmlFor='bio'>What's not to love?</label>\n                    <textarea className='form-control' id='bio' rows='3' \n                        value={this.state.description}\n                        onChange={this.handleInputChange}\n                        name=\"description\"\n                    />\n                    <label htmlFor='add-photo'>Add Photo URL:</label>\n                    <input type='text' className='form-control' id='add-photo' \n                        value={this.state.imgURL}\n                        onChange={this.handleInputChange}\n                        name=\"imgURL\"\n                    />\n                    <button type=\"submit\" className=\"btn btn-primary\"\n                        onClick={this.handleFormSubmit}\n                    >Submit</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n}\n\nexport default CatForm;","import React, { Component } from 'react';\nimport Banner from '../components/Banner';\nimport CatForm from '../components/CatForm';\nimport SideNav from '../components/SideNav';\nimport { Container, Row, Col } from 'react-grid-system';\n\n\n// TODO click event that adds all form data to db\n\nclass AddCat extends Component {\n    render() {\n        return (\n            <Container>\n                <Banner />\n                <Row>\n                    <Col sm={3}>\n                        <SideNav />\n                    </Col>\n                    <Col sm={7}>\n                        <CatForm />\n                    </Col>\n                    <Col sm={2}>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n\n}\n\nexport default AddCat;","const petfinder = require(\"@petfinder/petfinder-js\");\n\nclass AdoptionSDK {\n  constructor() {\n    this.client = new petfinder.Client({\n      apiKey: \"DZTx6mYRQKcXtEzsrwroIRqFXBp2YzYI3YK3ZuqWxkGUjcrmW7\",\n      secret: \"XcUMQrOzZd6F0PxYuqHIGJTGkwmHWdJZJ0wqzXiE\"\n    });\n  }\n\n  search = (location, callback) => {\n    return this.client.organization\n      .search({ location: location })\n      .then(resp => {\n        // Display resp.data.organizations on adoption.js\n        return callback(resp.data);\n      })\n\n      .catch(error => {\n        console.log(error);\n      });\n  };\n}\nconst adoptsdk = new AdoptionSDK();\n\nexport default adoptsdk;\n","import React from \"react\";\nimport \"./style.css\";\n\n// This file exports both the List and ListItem components\n\nexport function List({ children }) {\n  return (\n    <div className=\"list-overflow-container\">\n      <ul className=\"list-group\">{children}</ul>\n    </div>\n  );\n}\n\nexport function ListItem({ children }) {\n  return <li className=\"list-group-item\">{children}</li>;\n}\n","import React from \"react\";\nimport { ListItem } from \"../List\";\nimport \"./style.css\";\nimport { Container, Row, Col } from \"react-grid-system\";\nimport Button from \"react-bootstrap/Button\";\n\nconst Org = ({ name, city, website, mission_statement, url }) => {\n  // console.log(\"this is my \" + Org);\n  return (\n    <ListItem>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{name}</h5>\n          <a\n            href={url}\n            className=\"btn btn-outline-primary myButton\"\n            role=\"button\"\n            aria-pressed=\"true\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Find Your Future Furry Friend\n          </a>\n          <p className=\"card-text\">{\"In \" + city}</p>\n          <h6 className=\"card-subtitle mb-2 text-muted\">{website}</h6>\n          <p className=\"card-text\">{mission_statement}</p>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default Org;\n","import React, { Component, Fragment } from \"react\";\nimport Banner from \"../components/Banner\";\nimport SideNav from \"../components/SideNav\";\nimport { Container, Row, Col } from \"react-grid-system\";\nimport API from \"../utils/API\";\nimport adoptsdk from \"../utils/AdoptionSDK\";\nimport Org from \"../components/Orgs\";\nimport { List } from \"../components/List\";\n\n// Function that hits local adoption API to get info about adoption local furries\nclass Adopt extends Component {\n  state = {\n    orgs: [],\n    q: \"\",\n    message: \"Search for adoption organizations in your area...\"\n  };\n\n  handleInputChange = event => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  loadOrgs = () => {\n    API.getOrgs(this.state.q)\n      .then(res => {\n        if (res && res.data.length > 0) {\n          //simple validation before setting state\n          this.setState({ orgs: res.data });\n        } else {\n          // if backend doesn't respond with appropriate data then reset UI.\n          this.setDefaultState();\n        }\n      })\n      .catch(err => {\n        console.log(err + \"-There is an error.\");\n        this.setDefaultState();\n      });\n  };\n\n  //function to reset state when needed\n  setDefaultState = () => {\n    this.setState({\n      orgs: [],\n      message: \"No results.\"\n    });\n  };\n\n  //handles search form input\n  handleFormSubmit = event => {\n    event.preventDefault();\n    //this is my search term for location\n    console.log(this.state.q);\n    adoptsdk.search(this.state.q, response => {\n      //this is what the API returns...\n      console.log(\"This is my API response: \", response);\n\n      //this is setting the state for orgs with the API response data\n      this.setState({ orgs: response.organizations });\n\n      //this is our new state for orgs\n      console.log(\"This is my new state for orgs: \", this.state.orgs);\n    });\n  };\n\n  render() {\n    //  console.log(this.state.orgs);\n    return (\n      <Container>\n        <Banner />\n        <Row>\n          <Col sm={3}>\n            <SideNav />\n          </Col>\n          <Col sm={9}>\n            <div\n              style={{\n                height: 300,\n                clear: \"both\",\n                paddingTop: 120,\n                textAlign: \"center\"\n              }}\n              className=\"jumbotron\"\n            >\n              <h1>Get your own furry ball of fun!</h1>\n              <h2>Find adoption organizations near you.</h2>\n            </div>\n\n            <form className=\"form-inline\" role=\"form\">\n              <div className=\"form-group\">\n                <label htmlFor=\"Title\" className=\"sr-only\">\n                  Search Adoption Organizations\n                </label>\n                <input\n                  className=\"form-control\"\n                  id=\"Title\"\n                  type=\"text\"\n                  value={this.state.q}\n                  placeholder=\"Enter city and state (ex. Austin, Tx) or zip-code\"\n                  name=\"q\"\n                  onChange={this.handleInputChange}\n                  size=\"62\"\n                  required\n                />\n              </div>\n              <button\n                onClick={this.handleFormSubmit}\n                type=\"submit\"\n                className=\"btn btn-lg search-btn\"\n              >\n                Search\n              </button>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <h1 className=\"text-center\">Results</h1>\n            {this.state.orgs.length ? (\n              <List>\n                {this.state.orgs.map(org => {\n                  return (\n                    <Fragment key={org.id}>\n                      <Org\n                        name={org.name}\n                        city={org.address.city}\n                        website={org.website}\n                        mission_statement={org.mission_statement}\n                        url={org.url}\n                      />\n                    </Fragment>\n                  );\n                })}\n              </List>\n            ) : (\n              <div>\n                <h2 className=\"heading-title text-center\">\n                  {this.state.message}\n                </h2>\n              </div>\n            )}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Adopt;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper flex-column\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React, { Fragment } from \"react\";\nimport \"./style.css\";\nimport { Container, Row, Col } from \"react-grid-system\";\n\nfunction RumbleGalleryCard(props) {\n  return (\n    <Fragment>\n      <Container>\n        <Row>\n          <Col>\n            <div className=\"card\">\n              <h5 className=\"card-subtitle\">{props.alias}</h5>\n              <div\n                //Need a new prop - isClicked - boolean - used to determine which cat will play the game\n                onClick={() => props.clicked(props.isClicked, props.id)}\n                className=\"img-container\"\n              >\n                <img className=\"cat-pic\" src={props.image} />\n              </div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    </Fragment>\n  );\n}\n\nexport default RumbleGalleryCard;\n","import React, { Component } from \"react\";\nimport Banner from \"../components/Banner\";\nimport SideNav from \"../components/SideNav\";\nimport Wrapper from \"../components/Wrapper\";\nimport { Container, Row, Col } from \"react-grid-system\";\nimport RumbleGalleryCard from \"../components/RumbleGalleryCard\";\nimport \"./rumble_styles.css\";\n//! The next line is for dummy data only\nimport dummyCats from \"../dummyCats.json\";\n\nclass Rumble extends Component {\n  state = {\n    dummyCats,\n    score: 0,\n    userMsg: \"Choose your cat.\"\n  };\n\n  handleSelection = () => {\n    // Use the setState method to update a component's state\n    this.setState({ clicked: true });\n  };\n\n  //if your cat wins the rumble, display the Win message, give winning cat a point\n  // gameWin = () => {\n  //     let newCardReset = this.state.dummyCats.map(card => {\n  //       card.clicked = false;\n  //       return card;\n  //     });\n  //     this.setState({\n  //       dummyCats: [...newCardReset],\n  //       score: 0,\n  //       userMsg: \"Your cat is king of the jungle! \",\n  //       clicked: false\n  //     });\n  //   };\n\n  // gameReset = () => {\n  //     // reset all card \"clicked\" properties to false\n  //     let newCardReset = this.state.dummyCats.map(card => {\n  //       card.clicked = false;\n  //       return card;\n  //     });\n  // this.setState(\n  //     {\n  //     dummyCats,\n  //     score: this.state.score,\n  //     userMsg: \"You lost the rumble.\",\n  //     clicked: false\n  //     },\n  //     () => {\n  //     // see latest state changes in console\n  //     console.log(\"reset\", this.state);\n  //     }\n  // );\n  // };\n\n  // increment = (isClicked, id) => {\n  //     console.log(\"entering increment function \", isClicked, id);\n  //     if (isClicked === false) {\n  //       // update element in card array with \"clicked property as true\"\n  //       let newCardInfo = this.state.cardInfo;\n  //       newCardInfo[id].clicked = true;\n\n  //       // resort entire array of cards\n  //       newCardInfo.sort(function(a, b) {\n  //         return 0.5 - Math.random();\n  //       });\n\n  //       //add one point to the score\n  //       let newScore = this.state.score + 1;\n\n  //       // update react state\n  //       // 1) sorted newCardInfo with item clicked as true\n  //       // 2) show user message, \"That's correct!\"\n  //       // 3) score with addition of 1 point\n  //       // 4) shake set to false\n\n  //       this.setState(\n  //         {\n  //           cardInfo: [...newCardInfo],\n  //           userMsg: \"Correct guess!\",\n  //           score: newScore,\n  //           shake: false\n  //         },\n  //         () => {\n  //           // see latest state changes in console\n  //           console.log(\"guessed correctly\", this.state);\n  //         }\n  //       );\n\n  //       //if all cards guessed correctly, run gameWin function\n  //       if (newScore === cardInfo.length) {\n  //         this.gameWin();\n  //       }\n\n  //       //if user guesses correctly add one point to the score\n  //       else if (newScore >= this.state.topScore) {\n  //         this.setState({ topScore: newScore });\n  //       }\n  //     }\n  //     //if user guesses incorrectly, run gameReset function\n  //     else {\n  //       this.gameReset();\n  //     }\n  //   };\n\n  render() {\n    return (\n      <Container>\n        <Banner />\n        <Row>\n          <Col sm={3}>\n            <SideNav />\n          </Col>\n          <Col sm={9}>\n            <div className=\"rumbleSubtitle\">Pick Your Rumbler</div>\n            <Wrapper>\n              {this.state.dummyCats.map(dummyCat => (\n                <RumbleGalleryCard\n                  id={dummyCat.id}\n                  key={dummyCat.id}\n                  alias={dummyCat.alias}\n                  image={dummyCat.image}\n                />\n              ))}\n            </Wrapper>\n          </Col>\n          <Col>\n            <div class=\"card\">\n              <div class=\"card-body\">This is some text within a card body.</div>\n            </div>\n          </Col>\n          <Col>\n            <div class=\"card\">\n              <div class=\"card-body\">This is some text within a card body.</div>\n            </div>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default Rumble;\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport AddCat from \"./pages/AddCat\";\nimport Adopt from \"./pages/Adopt\";\nimport Rumble from \"./pages/Rumble\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"; //npm install react-bootstrap bootstrap\n\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n// trying to import this for bootstrap grid\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n//add animals route\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/addcat\" component={AddCat} />\n        <Route exact path=\"/adopt\" component={Adopt} />\n        <Route exact path=\"/rumble\" component={Rumble} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}